{
  "version": 3,
  "sources": ["../../mitt/src/index.ts", "../../notiwind/dist/index.esm.js"],
  "sourcesContent": ["export type EventType = string | symbol;\n\n// An event handler can take an optional event argument\n// and should not return a value\nexport type Handler<T = unknown> = (event: T) => void;\nexport type WildcardHandler<T = Record<string, unknown>> = (\n\ttype: keyof T,\n\tevent: T[keyof T]\n) => void;\n\n// An array of all currently registered event handlers for a type\nexport type EventHandlerList<T = unknown> = Array<Handler<T>>;\nexport type WildCardEventHandlerList<T = Record<string, unknown>> = Array<\n\tWildcardHandler<T>\n>;\n\n// A map of event types and their corresponding event handlers.\nexport type EventHandlerMap<Events extends Record<EventType, unknown>> = Map<\n\tkeyof Events | '*',\n\tEventHandlerList<Events[keyof Events]> | WildCardEventHandlerList<Events>\n>;\n\nexport interface Emitter<Events extends Record<EventType, unknown>> {\n\tall: EventHandlerMap<Events>;\n\n\ton<Key extends keyof Events>(type: Key, handler: Handler<Events[Key]>): void;\n\ton(type: '*', handler: WildcardHandler<Events>): void;\n\n\toff<Key extends keyof Events>(\n\t\ttype: Key,\n\t\thandler?: Handler<Events[Key]>\n\t): void;\n\toff(type: '*', handler: WildcardHandler<Events>): void;\n\n\temit<Key extends keyof Events>(type: Key, event: Events[Key]): void;\n\temit<Key extends keyof Events>(\n\t\ttype: undefined extends Events[Key] ? Key : never\n\t): void;\n}\n\n/**\n * Mitt: Tiny (~200b) functional event emitter / pubsub.\n * @name mitt\n * @returns {Mitt}\n */\nexport default function mitt<Events extends Record<EventType, unknown>>(\n\tall?: EventHandlerMap<Events>\n): Emitter<Events> {\n\ttype GenericEventHandler =\n\t\t| Handler<Events[keyof Events]>\n\t\t| WildcardHandler<Events>;\n\tall = all || new Map();\n\n\treturn {\n\t\t/**\n\t\t * A Map of event names to registered handler functions.\n\t\t */\n\t\tall,\n\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to listen for, or `'*'` for all events\n\t\t * @param {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton<Key extends keyof Events>(type: Key, handler: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\thandlers.push(handler);\n\t\t\t} else {\n\t\t\t\tall!.set(type, [handler] as EventHandlerList<Events[keyof Events]>);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t * If `handler` is omitted, all handlers of the given type are removed.\n\t\t * @param {string|symbol} type Type of event to unregister `handler` from (`'*'` to remove a wildcard handler)\n\t\t * @param {Function} [handler] Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff<Key extends keyof Events>(type: Key, handler?: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\tif (handler) {\n\t\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1);\n\t\t\t\t} else {\n\t\t\t\t\tall!.set(type, []);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `'*'` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * Note: Manually firing '*' handlers is not supported.\n\t\t *\n\t\t * @param {string|symbol} type The event type to invoke\n\t\t * @param {Any} [evt] Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit<Key extends keyof Events>(type: Key, evt?: Events[Key]) {\n\t\t\tlet handlers = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as EventHandlerList<Events[keyof Events]>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(evt!);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\thandlers = all!.get('*');\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as WildCardEventHandlerList<Events>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(type, evt!);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n", "import y from \"mitt\";\nimport { defineComponent as f, inject as G, reactive as M, computed as d, onMounted as U, openBlock as w, createBlock as O, TransitionGroup as C, unref as v, withCtx as D, renderSlot as g, provide as $, h as B } from \"vue\";\nconst r = y();\nlet T = 0;\nconst b = () => {\n  const o = T;\n  return T += 1, o;\n}, _ = () => (o, i) => {\n  const t = {\n    ...o,\n    id: b(),\n    group: o.group || \"\"\n  };\n  return r.emit(\"notify\", { notification: t, timeout: i }), () => r.emit(\"close\", t.id);\n}, I = \"context\", u = /* @__PURE__ */ f({\n  __name: \"Notification\",\n  props: {\n    maxNotifications: { default: 10 },\n    enter: { default: \"\" },\n    enterFrom: { default: \"\" },\n    enterTo: { default: \"\" },\n    leave: { default: \"\" },\n    leaveFrom: { default: \"\" },\n    leaveTo: { default: \"\" },\n    move: { default: \"\" },\n    moveDelay: { default: \"\" }\n  },\n  emits: [\"close\"],\n  setup(o, { emit: i }) {\n    const t = o, c = G(I), s = M({ notifications: [], timeouts: {} }), a = d(\n      () => s.notifications.filter((e) => e.group === c.group)\n    ), E = d(() => c.position === \"bottom\" ? [...a.value] : [...a.value].reverse()), m = (e, n) => {\n      s.timeouts[e] = window.setTimeout(() => {\n        n !== -1 && l(e);\n      }, Math.max(n || 3e3, 0));\n    }, l = (e) => {\n      s.notifications.splice(\n        s.notifications.findIndex((n) => n.id === e),\n        1\n      ), clearTimeout(s.timeouts[e]);\n    }, h = ({\n      notification: e,\n      timeout: n\n    }) => {\n      s.notifications.length !== t.maxNotifications && (s.notifications.push(e), m(e.id, n));\n    }, x = (e) => {\n      i(\"close\"), l(e);\n    }, F = (e, n, p) => {\n      n ? clearTimeout(s.timeouts[e]) : m(e, p);\n    };\n    return U(() => {\n      r.on(\"notify\", h), r.on(\"close\", l);\n    }), (e, n) => (w(), O(C, {\n      \"enter-active-class\": v(a).length > 1 ? [t.enter, t.moveDelay].join(\" \") : t.enter,\n      \"enter-from-class\": t.enterFrom,\n      \"enter-to-class\": t.enterTo,\n      \"leave-active-class\": t.leave,\n      \"leave-from-class\": t.leaveFrom,\n      \"leave-to-class\": t.leaveTo,\n      \"move-class\": t.move\n    }, {\n      default: D(() => [\n        g(e.$slots, \"default\", {\n          notifications: v(E),\n          close: x,\n          hovering: F\n        })\n      ]),\n      _: 3\n    }, 8, [\"enter-active-class\", \"enter-from-class\", \"enter-to-class\", \"leave-active-class\", \"leave-from-class\", \"leave-to-class\", \"move-class\"]));\n  }\n}), N = /* @__PURE__ */ f({\n  __name: \"NotificationGroup\",\n  props: {\n    group: { default: \"\" },\n    position: { default: \"top\" }\n  },\n  setup(o) {\n    const i = o;\n    return $(I, {\n      group: i.group,\n      position: i.position\n    }), (t, c) => g(t.$slots, \"default\", { group: o.group });\n  }\n});\nfunction j(o) {\n  o.config.globalProperties.$notify = _(), o.component(\"Notification\", u), o.component(\"NotificationGroup\", N), o.component(\"notification\", u), o.component(\"notificationGroup\", N);\n}\nconst K = {\n  install: j\n};\nfunction P() {\n  return f(\n    (i, { slots: t }) => () => B(u, i, t)\n  );\n}\nconst S = _();\nexport {\n  u as Notification,\n  N as NotificationGroup,\n  _ as createNotifier,\n  K as default,\n  P as defineNotificationComponent,\n  S as notify\n};\n"],
  "mappings": "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",
  "names": ["all", "Map", "on", "type", "handler", "handlers", "get", "push", "set", "off", "splice", "indexOf", "emit", "evt", "slice", "map", "h"]
}
